{
  "name": "facility-management-api",
  "version": "1.0.0",
  "description": "Backend API for Facility Management System",
  "main": "src/server.js",
  "scripts": {
    "start": "node src/server.js",
    "start:threading": "node --expose-gc src/server.js",
    "dev": "nodemon src/server.js",
    "dev:threading": "nodemon --expose-gc src/server.js",
    "dev:ts": "nodemon --exec \"node -r ts-node/register\" src/server.js",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:e2e": "node --expose-gc -r ts-node/register src/services/threading/test-runner.ts",
    "test:threading": "node --expose-gc src/services/threading/__tests__/run-tests.js",
    "readiness:check": "node -r ts-node/register src/services/threading/readiness-check.ts",
    "readiness:check:verbose": "node -r ts-node/register src/services/threading/readiness-check.ts --verbose",
    "readiness:check:full": "node -r ts-node/register src/services/threading/readiness-check.ts --verbose --with-threading",
    "build": "tsc",
    "build:watch": "tsc --watch",
    "threading:status": "curl -s http://localhost:3001/api/threading/status | jq",
    "threading:health": "curl -s http://localhost:3001/api/threading/health | jq",
    "threading:restart": "curl -X POST http://localhost:3001/api/threading/restart",
    "logs:threading": "tail -f logs/threading.log",
    "db:migrate:extend-meterreadings": "node scripts/extend-meterreadings.js",
    "db:test:stats": "node scripts/test-stats-sql.js",
    "email:setup": "node scripts/setup-email-system.js",
    "email:setup:reset": "node scripts/setup-email-templates.js --reset",
    "templates:seed": "node scripts/manage-templates.js seed",
    "templates:health": "node scripts/manage-templates.js health",
    "templates:repair": "node scripts/manage-templates.js repair",
    "templates:list": "node scripts/manage-templates.js list",
    "templates:stats": "node scripts/manage-templates.js stats",
    "notifications:test": "node -e \"const scheduler = require('./src/services/NotificationScheduler'); const analyzer = require('./src/services/MeterDataAnalyzer'); const db = require('./src/config/database'); db.connect().then(() => Promise.all([scheduler.initialize(), analyzer.initialize()])).then(() => console.log('âœ… Notification services tested')).catch(console.error).finally(() => process.exit(0))\"",
    "email:test": "node scripts/setup-email-system.js --test"
  },
  "dependencies": {
    "@types/nodemailer": "^7.0.2",
    "@types/pg": "^8.15.5",
    "bcryptjs": "^2.4.3",
    "cors": "^2.8.5",
    "dotenv": "^16.3.1",
    "express": "^4.18.2",
    "express-rate-limit": "^6.10.0",
    "express-validator": "^7.0.1",
    "helmet": "^7.0.0",
    "isomorphic-dompurify": "^2.28.0",
    "jsonwebtoken": "^9.0.2",
    "modbus-serial": "^8.0.23",
    "multer": "^2.0.2",
    "node-cron": "^4.2.1",
    "nodemailer": "^6.10.1",
    "pg": "^8.16.3",
    "ts-node": "^10.9.1",
    "typescript": "^5.0.0",
    "winston": "^3.18.3"
  },
  "devDependencies": {
    "@types/node": "^20.0.0",
    "jest": "^30.2.0",
    "nodemon": "^3.0.1",
    "supertest": "^7.1.4"
  },
  "keywords": [
    "facility-management",
    "api",
    "postgresql",
    "express"
  ],
  "author": "",
  "license": "MIT"
}
